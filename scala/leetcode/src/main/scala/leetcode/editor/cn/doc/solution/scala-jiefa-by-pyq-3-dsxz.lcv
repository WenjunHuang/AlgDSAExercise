### 解题思路

此处撰写解题思路

### 代码

* scala

```scala
object Solution {
    import collection.mutable._
  def dfs(curres:Stack[Int],nums:Array[Int],states: Array[Boolean],res:ArrayBuffer[List[Int]]):Unit={
    if(states.forall(!_)){
      res.append(curres.clone().toList)
      return }
    var trash = -20
    for(i <- 0 until nums.length){
      if(states(i)&&trash!=nums(i)) {
        curres.push(nums(i))
        states(i)=false
        dfs(curres,nums,states,res)
        curres.pop()
        states(i)=true
        trash = nums(i)
      }
    }
  }
    def permuteUnique(nums: Array[Int]): List[List[Int]] = {
    val states = Array.fill(nums.length)(true)
    val res = ArrayBuffer[List[Int]]()
    val curres = Stack[Int]()
    dfs(curres,nums.sorted,states,res)
    return res.toList
    }
}
```

